import { Theme } from "../../theme.slint";
import { Store } from "../../store.slint";
import { Logic } from "../../logic.slint";
import { IconBtn } from "../../base/icon-btn.slint";

export component Colors inherits Rectangle {
    property<int> column-count: Theme.colors-column-count;
    property<length> item-size: Theme.colors-item-size;
    property<length> item-spacing: Theme.colors-item-spacing;

    flick := Flickable {
        viewport-height: (item-size + item-spacing * 2) * Math.ceil(Store.colors.length / column-count) - item-spacing * 2 + Theme.padding * 2;

        vbox := VerticalLayout {
            padding: Theme.padding;

            Rectangle {
                for item[index] in Store.colors : Rectangle {
                    x: (item-size + item-spacing) * Math.mod(index, column-count);
                    y: (item-size + item-spacing * 2) * Math.floor(index / column-count);
                    width: item-size;
                    height: item-size;
                    border-radius: Theme.border-radius;
                    background: touch.pressed ? Theme.hover-color : touch.has-hover ? Theme.hover-color.brighter(10%) : Colors.transparent;

                    VerticalLayout {
                        alignment: center;
                        HorizontalLayout {
                            alignment: center;
                            Rectangle {
                                width: item-size * 0.7;
                                height: self.width;
                                background: item.value;
                                border-radius: Theme.border-radius;
                            }
                        }

                        HorizontalLayout {
                            alignment: center;
                            Text {
                                text: item.name;
                                color: Theme.regular-text-color;
                                font-size: Theme.color-text-font-size;
                            }
                        }
                    }

                    touch := TouchArea {
                        mouse-cursor: self.has-hover ? pointer : default;
                        clicked => {
                            Logic.copy-to-clipboard(item.hex);
                        }
                    }
                }
            }
        }
    }
}
